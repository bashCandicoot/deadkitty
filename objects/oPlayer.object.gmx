<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump = false
fall = false
land = false
roll = false
rolling = false
rollWhenLanding = false
rollComplete = false
spawn = false
death1 = false
death2 = false
explode = false

secondsSinceJump = 0
secondsSinceFall = 0
secondsSinceLand = 0
secondsSinceRoll = 0
secondsSinceSpawn = 0

deathPosX = 0
deathPosY = 0

spriteFlashIncrement = 0
jumpForce = 700/room_speed
fallForce = 700/room_speed
deceleration = 5/room_speed

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm to roll player as they land \\
if (oPlayer.death1 == false) {   
    roll = true
    alarm[2] = 18
    sprite_index = sPlayerRoll
    image_index = 0
    image_speed = 0.65 }   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm to set player sprite to rolling sprite \\
sprite_index = sPlayerRolling
rollComplete = true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm to set player sprite to death sprite \\
sprite_index = sPlayerDeath
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm to set the sPlayer sprite back to default (running sprite) \\
if (death1 == false) {
        roll = false
        sprite_index = sPlayer
        image_speed = 1
        image_index = 0 } 
// as player sprite is default, they are not rolling
// set flag to false which allows them to roll if mb_right == true


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Roll When Landing \\
if (oPlayer1.death1 == false) {
    if (fall == true) || (land == true) {      
            if (rollWhenLanding == false)
                    if (mouse_check_button_pressed (mb_right)) {
                        rollWhenLanding = true } } }
// if the player is falling or landing and rmb has been pressed
// set rollWhenLanding flag = true, so that the player instantly rolls after landing
 
// Rolling \\           
if (oPlayer1.death1 == false) {
     if (roll == false) {
        if (y == ground) {
            if (land == false) {
                if (mouse_check_button_pressed (mb_right)) {
                    roll = true
                    alarm[2] = 18
                    sprite_index = sPlayerRoll
                    image_index = 0
                    image_speed = 0.65 } } } } }
// if rmb change sprite to roll and call rolling alarm in 18steps
// alarm[2] sets sprite to rolling and sets rollComplete = true
                    
// Roll Complete \\
if (oPlayer1.death1 == false) {
    if (rollComplete == true) {
        secondsSinceRoll += 1/room_speed
        if (secondsSinceRoll &gt;= 0.3) {
            rollComplete = false
            secondsSinceRoll = 0
            alarm[0] = 18
            sprite_index = sPlayerRollComplete
            image_index = 0
            image_speed = 0.65 } } }
// if rolling sprite has gone on longer than &gt; 0.3 set sprite to rollComplete
// call alarm[0] to set back to standard running sprite

                              

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>99,79</point>
    <point>100,100</point>
  </PhysicsShapePoints>
</object>
